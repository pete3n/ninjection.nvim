---@module "ninjection.types"
---@brief
--- The types module contains all ninjection specific type definitions.
---
---@meta
---@tag EditorStyle
---@alias EditorStyle "cur_win" | "floating" | "v_split" | "h_split"
---@brief
--- Supported window styles for buffer editor:
--- `"cur_win" | "floating" | "v_split" | "h_split"`

---@tag Ninjection.Subcommand
---@class Ninjection.Subcommand
---@brief Implemented by `plugin/ninjection.lua` for user commands.
---
---@field impl fun()
---@field complete? fun(arg_lead: string): string[]

---@tag Ninjection.CmdOpts
---@class Ninjection.CmdOpts
---@brief Implemented by `plugin/ninjection.lua` for user commands.
---
---@field args string - The entire argument string as typed.
---@field fargs string[] - Command arguments as an array of strings.
---@field bang? boolean - Bang (!) flag.
---@field line1? number - Starting line number for optional range.
---@field line2? number - Ending line number for optional range.
---@field count? number - Optional count.

---@tag Ninjection.Config
---@class Ninjection.Config
---@brief Implemented by `ninjection/config.lua` for default and user configs.
---
---@field preserve_indents? boolean - Preserve indents from the parent buffer.
--- This option should be used in conjunction with `auto_format` because this
--- will re-apply indents that `auto_format` normally removes. If you don't remove
--- indents, then enabling this will increas the original indenation.
---
---@field auto_format? boolean - Auto format the new child buffer: default (true).
---@field format_cmd? string - Command used for formatting.
---@field format_indent? integer - Additional spaces to indent injected text blocks.
---@field format_timeout? integer - Timeout in ms to wait for buffer formatting:
--- default (1000)
---@field lsp_timeout? integer - Timeout in ms to wait for LSP to start:
--- default (2000)
---@field register? string - Register to use to copy injected content.
---@field debug? boolean - Output debug messages.
---
---@field editor_style? EditorStyle
--- Window style to use for the injected context editor.
---
---@field win_config? vim.api.keyset.win_config
--- Window configuration parameters.
---
---@field inj_lang_queries? table<string,string> - Contains per-language string
--- literals for Treesitter queries to Identify injected content nodes.
---
---@field inj_lang_comment_pattern? table<string,string> - Contains pattern to strip
--- injected language comment to derive the language. Defaults to # lang style
--- comments for Nix.
---
---@field inj_text_modifiers? table<string, fun(text: string): string, table> - Contains
--- per-language functions to modify text returned by the lang query
---
---@field inj_text_restorers? table<string, fun(text: string, meta: table): string[]> - Contains
--- per-language functions to restore modified text
---
---@field inj_lang_tweaks? table<string, NJLangTweak> - Contains
--- language functions to workaround limitations in Treesitter queries and post-process
--- injected content selections.
---
---@field lsp_map? table<string, string> - Maps the injected language filetype
--- comment to an LSP configuration name for that filetype.

---@tag NJRange
---@class NJRange
---@brief Store cursor position coordinates.
---
---@field s_row integer
---@field s_col integer
---@field e_row integer
---@field e_col integer

---@tag NJCapturePair
---@class NJCapturePair
---@brief Store a language string and its associated node.
---
---@field inj_lang string Language tag extracted from inj_lang capture
---@field node TSNode Node associated with the injected code

---@tag NJLangTweak
---@class NJLangTweak
---@brief Language specific adjustments for tweaking parsing and buffers.
---
---@field parse_range_offset NJRange
---@field buffer_cursor_offset NJRange

---@tag NJNodeTable
---@class NJNodeTable
---@brief Store an injected language capture pair, its range, its text, and the
--- cursor position.
---
---@field ft string Filetype of the buffer containing the injection
---@field pair NJCapturePair Injected code node and its language tag
---@field range NJRange Range of the injected code node
---@field text string Injected text
---@field text_meta? table<string, boolean> Language specific text modififications
---@field cursor_pos integer[] Cursor position during table creation

---@tag NJIndents
---@class NJIndents
---@brief Store indents for a text buffer.
---
---@field t_indent number
---@field b_indent number
---@field l_indent number
---@field tab_indent number
